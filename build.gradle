/*
 * © Copyright - Astride UG (haftungsbeschränkt) & Leon Krogul (Herr_Einhorn) - 2020.
 */


import org.apache.tools.ant.filters.ReplaceTokens

import java.text.SimpleDateFormat

buildscript {
    ext {
        kotlinVersion = '1.3.61'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'maven'

group 'me.leon'
version '0.1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
    maven { url = ("https://hub.spigotmc.org/nexus/content/groups/public/") }
    maven { url = ("https://hub.spigotmc.org/nexus/content/repositories/snapshots/") }
}

configurations {
    // configuration that holds jars to include in the jar
    compile.extendsFrom jarLibs
//        testCompileOnly.extendsFrom jarLibs
}

test {
    useJUnitPlatform()
}

dependencies {
    jarLibs 'com.beust:klaxon:5.0.1'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'

    compileOnly(fileTree(libsDirName))
    compile("org.spigotmc:spigot-api:1.8.8-R0.1-SNAPSHOT")

    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5:1.3.61"
}

jar {
    zip64 = true
    from {
        configurations.jarLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes(
                'Built-By': System.properties['user.name'],
                'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Build-Revision': project.version,
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict', '-XXLanguage:+InlineClasses']
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict', '-XXLanguage:+InlineClasses']
        jvmTarget = "1.8"
    }
}
